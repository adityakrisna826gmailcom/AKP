<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-06T13:17:54 WIB" name="Suite" finished-at="2022-09-06T13:17:54 WIB" duration-ms="57">
    <groups>
    </groups>
    <test started-at="2022-09-06T13:17:54 WIB" name="Test" finished-at="2022-09-06T13:17:54 WIB" duration-ms="57">
      <class name="ujian.ujiankedua.TestCalculator">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:ujian.ujiankedua.TestCalculator@1613674b]" started-at="2022-09-06T13:17:54 WIB" name="beforeTest" finished-at="2022-09-06T13:17:54 WIB" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:ujian.ujiankedua.TestCalculator@1613674b]" started-at="2022-09-06T13:17:54 WIB" name="beforeClass" finished-at="2022-09-06T13:17:54 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ujian.ujiankedua.TestCalculator@1613674b]" started-at="2022-09-06T13:17:54 WIB" name="beforeMethod" finished-at="2022-09-06T13:17:54 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testAddNilai()[pri:0, instance:ujian.ujiankedua.TestCalculator@1613674b]" started-at="2022-09-06T13:17:54 WIB" name="testAddNilai" finished-at="2022-09-06T13:17:54 WIB" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNilai -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ujian.ujiankedua.TestCalculator@1613674b]" started-at="2022-09-06T13:17:54 WIB" name="afterMethod" finished-at="2022-09-06T13:17:54 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testDivideNilai()[pri:0, instance:ujian.ujiankedua.TestCalculator@1613674b]" started-at="2022-09-06T13:17:54 WIB" name="testDivideNilai" finished-at="2022-09-06T13:17:54 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivideNilai -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ujian.ujiankedua.TestCalculator@1613674b]" started-at="2022-09-06T13:17:54 WIB" name="beforeMethod" finished-at="2022-09-06T13:17:54 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:ujian.ujiankedua.TestCalculator@1613674b]" started-at="2022-09-06T13:17:54 WIB" name="afterMethod" finished-at="2022-09-06T13:17:54 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:ujian.ujiankedua.TestCalculator@1613674b]" started-at="2022-09-06T13:17:54 WIB" name="afterClass" finished-at="2022-09-06T13:17:54 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:ujian.ujiankedua.TestCalculator@1613674b]" started-at="2022-09-06T13:17:54 WIB" name="afterTest" finished-at="2022-09-06T13:17:54 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- ujian.ujiankedua.TestCalculator -->
      <class name="ujian.ujiankedua.TestSortAlgoDynamic">
        <test-method is-config="true" signature="befTest()[pri:0, instance:ujian.ujiankedua.TestSortAlgoDynamic@1a4013]" started-at="2022-09-06T13:17:54 WIB" name="befTest" finished-at="2022-09-06T13:17:54 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befTest -->
        <test-method is-config="true" signature="befMethod()[pri:0, instance:ujian.ujiankedua.TestSortAlgoDynamic@1a4013]" started-at="2022-09-06T13:17:54 WIB" name="befMethod" finished-at="2022-09-06T13:17:54 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befMethod -->
        <test-method is-config="true" signature="befClass()[pri:0, instance:ujian.ujiankedua.TestSortAlgoDynamic@1a4013]" started-at="2022-09-06T13:17:54 WIB" name="befClass" finished-at="2022-09-06T13:17:54 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befClass -->
        <test-method signature="testPertama()[pri:1, instance:ujian.ujiankedua.TestSortAlgoDynamic@1a4013]" started-at="2022-09-06T13:17:54 WIB" name="testPertama" finished-at="2022-09-06T13:17:54 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPertama -->
        <test-method is-config="true" signature="aftMethod()[pri:0, instance:ujian.ujiankedua.TestSortAlgoDynamic@1a4013]" started-at="2022-09-06T13:17:54 WIB" name="aftMethod" finished-at="2022-09-06T13:17:54 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftMethod -->
        <test-method is-config="true" signature="befMethod()[pri:0, instance:ujian.ujiankedua.TestSortAlgoDynamic@1a4013]" started-at="2022-09-06T13:17:54 WIB" name="befMethod" finished-at="2022-09-06T13:17:54 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befMethod -->
        <test-method signature="testKedua()[pri:2, instance:ujian.ujiankedua.TestSortAlgoDynamic@1a4013]" started-at="2022-09-06T13:17:54 WIB" name="testKedua" finished-at="2022-09-06T13:17:54 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKedua -->
        <test-method is-config="true" signature="aftMethod()[pri:0, instance:ujian.ujiankedua.TestSortAlgoDynamic@1a4013]" started-at="2022-09-06T13:17:54 WIB" name="aftMethod" finished-at="2022-09-06T13:17:54 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftMethod -->
        <test-method is-config="true" signature="aftClass()[pri:0, instance:ujian.ujiankedua.TestSortAlgoDynamic@1a4013]" started-at="2022-09-06T13:17:54 WIB" name="aftClass" finished-at="2022-09-06T13:17:54 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftClass -->
        <test-method is-config="true" signature="aftTest()[pri:0, instance:ujian.ujiankedua.TestSortAlgoDynamic@1a4013]" started-at="2022-09-06T13:17:54 WIB" name="aftTest" finished-at="2022-09-06T13:17:54 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftTest -->
      </class> <!-- ujian.ujiankedua.TestSortAlgoDynamic -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
